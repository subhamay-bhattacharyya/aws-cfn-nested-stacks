AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  CFN Nested Template to create a VPC Endpoint

Metadata:
  TemplateName: vpc-endpoint.yaml
  TemplateType: This CloudFormation template creates a VPC Endpoint with configurable parameters and conditions.
  Description: >
    This CloudFormation template defines a VPC with optional IPV6 CIDR block.
  Version: 1.0.0
  Owner: Subhamay Bhattacharyya
  ProjectName: Nested Stack Templates Collection
  Modification History:
    - 1.0.0  Jan 01, 2025  --  Initial Version
  StepsToTest: Manually verify the Stack.
  StepsToCleanup: Stack delete command

  Parameters:
    ProjectName: The Project name to be used as a resource tag value.
    Environment: The Environment name to be used as a resource tag value.
    GitHubRef: GitHub Ref name to be used as a resource tag value.
    GitHubURL: GitHub URL to be used as a resource tag value.
    GitHubWFRunNumber: The Workflow run number to be used as a resource tag value.
    GitHubSHA: The sha value of the last commit to be used as a resource tag value.
    GitHubRepository: The GitHub Repository name to be used as a resource tag value.
    CiBuild: Ci Build of the feature branch to be appended to a resource name.    
    VpcId: The ID of the VPC.
    ServiceName: The service name for which the IAM Role is created. Must be one of the specified AWS services.
    S3BucketName: Name of the S3 Bucket for S3 VPC Gateway endpoint policy.
    SecretBaseName: Name of the AWS secret.
    SubnetIds: List of Subnet IDs for the Lambda function. Must be a comma-separated list of valid subnet IDs.
    RouteTableIds: List of Route Table IDs for the Lambda function. Must be a comma-separated list of valid route table IDs.

    Conditions:
      IsS3VpcGatewayEndpoint: Checks if the service name is "s3".
      IsSecretsManagerVpcInterfaceEndpoint: Checks if the service name is "secretsmanager".
      IsKmsVpcInterfaceEndpoint: Checks if the service name is "kms".
      IsRekognitionVpcInterfaceEndpoint: Checks if the service name is "rekognition".
      IsSnsVpcInterfaceEndpoint: Checks if the service name is "sns".
      IsSqsVpcInterfaceEndpoint: Checks if the service name is "sqs".
      IsCloudWatchVpcEndpoint: Checks if the service name is "logs".
      IsDynamoDBVpcGatewayEndpoint: Checks if the service name is "dynamodb".
      IsGlueVpcInterfaceEndpoint: Checks if the service name is "glue".
      IsAthenaVpcInterfaceEndpoint: Checks if the service name is "athena".
      IsKinesisVpcInterfaceEndpoint: Checks if the service name is "kinesis-streams".
      IsSSMParamStoreVpcInterfaceEndpoint: Checks if the service name is "ssm".


    Resources:
      S3VpcGatewayEndpoint: Creates an S3 VPC Gateway Endpoint.
      SecretsVpcInterEndpoint: Creates a Secrets Manager VPC Interface Endpoint.
      KmsInterfaceVpcEndpoint: Creates a KMS VPC Interface Endpoint.
      RekognitionInterfaceVpcEndpoint: Creates a Rekognition VPC Interface Endpoint.
      SnsInterfaceVpcEndpoint: Creates an SNS VPC Interface Endpoint.
      SqsInterfaceVpceEndpoint: Creates an SQS VPC Interface Endpoint.
      DynamoDBVpcGatewayEndpoint: Creates a DynamoDB VPC Gateway Endpoint.
      CloudWatchVpcEndpoint: Creates a CloudWatch VPC Endpoint.
      GlueVpcEndpoint: Creates a Glue VPC Interface Endpoint.
      KinesisVpcEndpoint: Creates a Kinesis VPC Interface Endpoint.
      AthenaVpcEndpoint: Creates an Athena VPC Interface Endpoint.
      SSMParamStoreVpcEndpoint: Creates an SSM ParamStore VPC Interface Endpoint.

    Outputs:
      S3GatewayVpceId: The ID of the S3 VPC Gateway Endpoint.
      DynamoDBGatewayVpceId: The ID of the DynamoDB VPC Gateway Endpoint.
      KmsInterfaceVpceId: The ID of the KMS VPC Interface Endpoint.
      RekognitionInterfaceVpceId: The ID of the Rekognition VPC Interface Endpoint.
      SecretsManagerInterfaceVpceId: The ID of the Secrets Manager VPC Interface Endpoint.
      SnsInterfaceVpceId: The ID of the SNS VPC Interface Endpoint.
      SqsInterfaceVpceId: The ID of the SQS VPC Interface Endpoint.
      CloudWatchVpceId: The ID of the CloudWatch VPC Endpoint.
      GlueVpcEndpointId: The ID of the Glue VPC Interface Endpoint.
      KinesisVpcEndpointId: The ID of the Kinesis VPC Interface Endpoint.
      AthenaVpcEndpointId: The ID of the Athena VPC Interface Endpoint.
      SSMParamStoreVpcEndpointId: The ID of the SSM ParamStore VPC Interface Endpoint.

  Resources:
    VpcEndpointSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: !Sub "${ProjectName}-${Environment}-${CiBuild}-vpce-sg"
        GroupDescription: Security Group for VPC Endpoint
        VpcId: !Ref VpcId
        Tags:
          - Key: Name
            Value: !Sub "${ProjectName}-${Environment}-${CiBuild}-vpce-sg"
          - Key: ProjectName
            Value: !Ref ProjectName
          - Key: Environment
            Value: !Ref Environment
          - Key: GitHubRef
            Value: !Ref GitHubRef
          - Key: GitHubURL
            Value: !Ref GitHubURL
          - Key: GitHubWFRunNumber
            Value: !Ref GitHubWFRunNumber
          - Key: GitHubSHA
            Value: !Ref GitHubSHA
          - Key: GitHubRepository
            Value: !Ref GitHubRepository
          - Key: CiBuild
            Value: !Ref CiBuild
  AWS::CloudFormation::Interface:
    ParameterGroups:
      ################################## Project Name and Environment ##############################
      - Label:
          default: "Project Name and Environment:"
        Parameters:
          - ProjectName
          - Environment
      ################################## GitHub Attributes #########################################
      - Label:
          default: "GitHub Attributes:"
        Parameters:
          - GitHubRef
          - GitHubURL
          - GitHubWFRunNumber
          - GitHubSHA
          - GitHubRepository
          - CiBuild
      ################################## VPC #######################################################
      - Label:
          default: "VPC Endpoint Configuration:"
        Parameters:
          - ServiceName
          - VpcId
          - SubnetIds
    ParameterLabels:
      ################################## Project Name and Environment ##############################
      ProjectName:
        default: "Name of the Project."
      Environment:
        default: "Name of the Deployment Environment."
      ################################## GitHub Attributes #########################################
      GitHubRef:
        default: "GitHub Reference Branch or Tag."
      GitHubURL:
        default: "URL of the GitHub Repository."
      GitHubWFRunNumber:
        default: "GitHub Workflow Execution Run Number."
      GitHubSHA:
        default: "GitHub Commit SHA."
      GitHubRepository:
        default: "Name of the GitHub Repository."
      CiBuild:
        default: "Continuous Integration Build Identifier."
      ################################## VPC Endpoint #########################################
      ServiceName:
        default: "Public AWS Service."
      VpcId:
        default: "VPC ID."
      SubnetIds:
        default: "Subnet IDs."

Parameters:
  ###################################### Project Name and Environment ##############################
  ProjectName:
    Default: app01-proj-1
    Description: "The Project name to be used as a resource tag value."
    Type: String
    MinLength: "5"
    MaxLength: "30"
    AllowedPattern: "^[a-z0-9-]+$"
    ConstraintDescription: "The length should be between 5 and 30, must contain only lowercase alphabets, numbers, or dashes."

  Environment:
    Default: devl
    Description: "The Environment name to be used as a resource tag value."
    Type: String
    AllowedValues: ["devl", "test", "prod"]
    ConstraintDescription: "The Environment must be devl / test or prod"

  ###################################### GitHub Attributes #########################################
  GitHubRef:
    Default: ref_name
    Description: "GitHub Ref name to be used as a resource tag value."
    Type: String
    AllowedPattern: "^[a-zA-Z0-9/_-]+$"
    ConstraintDescription: "The GitHub Ref Name can only contain alphanumeric characters, slashes, underscores, and hyphens."

  GitHubURL:
    Default: "https://github.com/owner/repository"
    Description: "GitHub URL to be used as a resource tag value."
    Type: String
    AllowedPattern: "^https://github.com/[a-zA-Z0-9._-]+/[a-zA-Z0-9._-]+/?$"
    ConstraintDescription: "The GitHub URL must start with 'https://github.com/' and can only contain alphanumeric characters, dots, underscores, and hyphens."

  GitHubWFRunNumber:
    Default: "1"
    Description: "The Workflow run number to be used as a resource tag value."
    Type: Number

  GitHubSHA:
    Default: "d3b07384d113edec49eaa6238ad5ff00f6fb3796"
    Description: "The sha value of the last commit to be used as a resource tag value."
    Type: String
    AllowedPattern: "^[a-fA-F0-9]{40}$"
    ConstraintDescription: "The SHA value must be a 40-character hexadecimal string."

  GitHubRepository:
    Default: 0001-repo01name-py-cft
    Description: "The GitHub Repository name to be used as a resource tag value."
    Type: String
    MinLength: "10"
    MaxLength: "30"
    AllowedPattern: "^\\d{4}-[a-z0-9]+(-[a-z]+)*$"
    ConstraintDescription: "The repository length should be between 10 and 30, must contain only lowercase letters, numbers, dashes, dots, and should start with a letter."

  CiBuild:
    Default: ""
    Description: "Ci Build of the feature branch to be appended to a resource name."
    Type: String

  ###################################### VPC #######################################################
  VpcId:
    Description: "The ID of the VPC."
    Type: String

  ServiceName:
    Default: "s3"
    Description: "The service name for which the VPC endpoint will be created."
    Type: String
    AllowedValues:
      [
        "ec2",
        "s3",
        "dynamodb",
        "sqs",
        "sns",
        "glue",
        "kms",
        "secretsmanager",
        "rekognition",
        "logs",
        "athena",
        "kinesis-streams",
        "ssm"
      ]

    ConstraintDescription: "The service name must be one of the following: ec2,s3,dynamodb,sqs,sns,glue,athena,kms,secretsmanager,rekognition,logs,athena, kinesis-streams, glue."
  
  SubnetIds:
    Default: ""
    Description: "List of Subnet IDs for the VPC endpoint."
    Type: CommaDelimitedList
    AllowedPattern: "^$|^subnet-[a-zA-Z0-9]+(,subnet-[a-zA-Z0-9]+)*$"
    ConstraintDescription: "The Subnet IDs must be a comma-separated list of valid subnet IDs."

  RouteTableIds:
    Default: ""
    Description: "List of Route Table IDs for the VPC endpoint."
    Type: CommaDelimitedList
    AllowedPattern: "^$|^rtb-[a-zA-Z0-9]+(,rtb-[a-zA-Z0-9]+)*$"
    ConstraintDescription: "The Route Table IDs must be a comma-separated list of valid route table IDs."

  SecurityGroupIds:
    Default: ""
    Description: "List of Security Group IDs for the VPC endpoint."
    Type: CommaDelimitedList
    AllowedPattern: "^$|^sg-[a-zA-Z0-9]+(,sg-[a-zA-Z0-9]+)*$"
    ConstraintDescription: "The Security Group IDs must be a comma-separated list of valid security group IDs."

######################################## Conditional ###############################################
Conditions:
  IsS3VpcGatewayEndpoint: !Equals [!Ref ServiceName, "s3"]
  IsSecretsManagerVpcInterfaceEndpoint: !Equals [!Ref ServiceName, "secretsmanager"]
  IsKmsVpcInterfaceEndpoint: !Equals [!Ref ServiceName, "kms"]
  IsRekognitionVpcInterfaceEndpoint: !Equals [!Ref ServiceName, "rekognition"]
  IsSnsVpcInterfaceEndpoint: !Equals [!Ref ServiceName, "sns"]
  IsSqsVpcInterfaceEndpoint: !Equals [!Ref ServiceName, "sqs"]
  IsCloudWatchVpcEndpoint: !Equals [!Ref ServiceName, "logs"]
  IsDynamoDBVpcGatewayEndpoint: !Equals [!Ref ServiceName, "dynamodb"]
  IsGlueVpcInterfaceEndpoint: !Equals [!Ref ServiceName, "glue"]
  IsAthenaVpcInterfaceEndpoint: !Equals [!Ref ServiceName, "athena"]
  IsKinesisVpcInterfaceEndpoint: !Equals [!Ref ServiceName, "kinesis-streams"]
  IsSSMParamStoreVpcInterfaceEndpoint: !Equals [!Ref ServiceName, "ssm"]

Resources:
  ###################################### S3 Gateway VPC Endpoint ###################################
  S3VpcGatewayEndpoint:
    Condition: IsS3VpcGatewayEndpoint
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.${ServiceName}
      VpcId: !Ref VpcId
      RouteTableIds: !Ref RouteTableIds 
      PrivateDnsEnabled: "false"
      Tags: 
        - Key: Name
          Value: !Sub "${ProjectName}-${ServiceName}-vpce${CiBuild}"
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: GitHubRepository
          Value: !Ref GitHubRepository
        - Key: GitHubRef
          Value: !Ref GitHubRef
        - Key: GitHubURL
          Value: !Ref GitHubURL
        - Key: GitHubWFRunNumber
          Value: !Ref GitHubWFRunNumber
        - Key: GitHubSHA
          Value: !Ref GitHubSHA

  ###################################### Secrets Interface VPC Endpoint ################################
  SecretsVpcInterEndpoint:
    Condition: IsSecretsManagerVpcInterfaceEndpoint
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.${ServiceName}
      VpcId: !Ref VpcId
      VpcEndpointType: "Interface"
      SubnetIds: !Ref SubnetIds
      SecurityGroupIds: !Ref SecurityGroupIds
      PrivateDnsEnabled: "true"
      Tags: 
        - Key: Name
          Value: !Sub "${ProjectName}-${ServiceName}-vpce${CiBuild}"
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: GitHubRepository
          Value: !Ref GitHubRepository
        - Key: GitHubRef
          Value: !Ref GitHubRef
        - Key: GitHubURL
          Value: !Ref GitHubURL
        - Key: GitHubWFRunNumber
          Value: !Ref GitHubWFRunNumber
        - Key: GitHubSHA
          Value: !Ref GitHubSHA

  ###################################### KMS Interface VPC Endpoint ################################
  KmsInterfaceVpcEndpoint:
    Condition: IsKmsVpcInterfaceEndpoint
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.${ServiceName}
      VpcId: !Ref VpcId
      VpcEndpointType: "Interface"
      SubnetIds: !Ref SubnetIds
      SecurityGroupIds: !Ref SecurityGroupIds
      PrivateDnsEnabled: "true"
      Tags: 
        - Key: Name
          Value: !Sub "${ProjectName}-${ServiceName}-vpce${CiBuild}"
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: GitHubRepository
          Value: !Ref GitHubRepository
        - Key: GitHubRef
          Value: !Ref GitHubRef
        - Key: GitHubURL
          Value: !Ref GitHubURL
        - Key: GitHubWFRunNumber
          Value: !Ref GitHubWFRunNumber
        - Key: GitHubSHA
          Value: !Ref GitHubSHA

  ###################################### Rekognition Interface VPC Endpoint ########################
  RekognitionInterfaceVpcEndpoint:
    Condition: IsRekognitionVpcInterfaceEndpoint
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.${ServiceName}
      VpcId: !Ref VpcId
      VpcEndpointType: "Interface"
      SubnetIds: !Ref SubnetIds
      SecurityGroupIds: !Ref SecurityGroupIds
      PrivateDnsEnabled: "true"
      Tags: 
        - Key: Name
          Value: !Sub "${ProjectName}-${ServiceName}-vpce${CiBuild}"
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: GitHubRepository
          Value: !Ref GitHubRepository
        - Key: GitHubRef
          Value: !Ref GitHubRef
        - Key: GitHubURL
          Value: !Ref GitHubURL
        - Key: GitHubWFRunNumber
          Value: !Ref GitHubWFRunNumber
        - Key: GitHubSHA
          Value: !Ref GitHubSHA

  ###################################### SNS Interface VPC Endpoint ################################
  SnsInterfaceVpcEndpoint:
    Condition: IsSnsVpcInterfaceEndpoint
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.${ServiceName}
      VpcId: !Ref VpcId
      VpcEndpointType: "Interface"
      SubnetIds: !Ref SubnetIds
      SecurityGroupIds: !Ref SecurityGroupIds
      PrivateDnsEnabled: "true"
      Tags: 
        - Key: Name
          Value: !Sub "${ProjectName}-${ServiceName}-vpce${CiBuild}"
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: GitHubRepository
          Value: !Ref GitHubRepository
        - Key: GitHubRef
          Value: !Ref GitHubRef
        - Key: GitHubURL
          Value: !Ref GitHubURL
        - Key: GitHubWFRunNumber
          Value: !Ref GitHubWFRunNumber
        - Key: GitHubSHA
          Value: !Ref GitHubSHA

  ###################################### SQS Interface VPC Endpoint ################################
  SqsInterfaceVpceEndpoint:
    Condition: IsSqsVpcInterfaceEndpoint
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.${ServiceName}
      VpcId: !Ref VpcId
      VpcEndpointType: "Interface"
      SubnetIds: !Ref SubnetIds
      SecurityGroupIds: !Ref SecurityGroupIds
      PrivateDnsEnabled: "true"
      Tags: 
        - Key: Name
          Value: !Sub "${ProjectName}-${ServiceName}-vpce${CiBuild}"
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: GitHubRepository
          Value: !Ref GitHubRepository
        - Key: GitHubRef
          Value: !Ref GitHubRef
        - Key: GitHubURL
          Value: !Ref GitHubURL
        - Key: GitHubWFRunNumber
          Value: !Ref GitHubWFRunNumber
        - Key: GitHubSHA
          Value: !Ref GitHubSHA

  ###################################### DynamoDB Gateway VPC Endpoint #############################
  DynamoDBVpcGatewayEndpoint:
    Condition: IsDynamoDBVpcGatewayEndpoint
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.${ServiceName}
      VpcId: !Ref VpcId
      RouteTableIds: !Ref RouteTableIds 
      PrivateDnsEnabled: "false"
      Tags: 
        - Key: Name
          Value: !Sub "${ProjectName}-${ServiceName}-vpce${CiBuild}"
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: GitHubRepository
          Value: !Ref GitHubRepository
        - Key: GitHubRef
          Value: !Ref GitHubRef
        - Key: GitHubURL
          Value: !Ref GitHubURL
        - Key: GitHubWFRunNumber
          Value: !Ref GitHubWFRunNumber
        - Key: GitHubSHA
          Value: !Ref GitHubSHA

  ###################################### CloudWatch VPC Endpoint ###################################
  CloudWatchVpcEndpoint:
    Condition: IsCloudWatchVpcEndpoint
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.${ServiceName}
      VpcId: !Ref VpcId
      VpcEndpointType: "Interface"
      SubnetIds: !Ref SubnetIds
      SecurityGroupIds: !Ref SecurityGroupIds
      PrivateDnsEnabled: "true"
      Tags: 
        - Key: Name
          Value: !Sub "${ProjectName}-${ServiceName}-vpce${CiBuild}"
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: GitHubRepository
          Value: !Ref GitHubRepository
        - Key: GitHubRef
          Value: !Ref GitHubRef
        - Key: GitHubURL
          Value: !Ref GitHubURL
        - Key: GitHubWFRunNumber
          Value: !Ref GitHubWFRunNumber
        - Key: GitHubSHA
          Value: !Ref GitHubSHA

  ###################################### Glue VPC Endpoint #########################################
  GlueVpcEndpoint:
    Condition: IsGlueVpcInterfaceEndpoint
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.${ServiceName}
      VpcId: !Ref VpcId
      VpcEndpointType: "Interface"
      SubnetIds: !Ref SubnetIds
      SecurityGroupIds: !Ref SecurityGroupIds
      PrivateDnsEnabled: "true"
      Tags: 
        - Key: Name
          Value: !Sub "${ProjectName}-${ServiceName}-vpce${CiBuild}"
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: GitHubRepository
          Value: !Ref GitHubRepository
        - Key: GitHubRef
          Value: !Ref GitHubRef
        - Key: GitHubURL
          Value: !Ref GitHubURL
        - Key: GitHubWFRunNumber
          Value: !Ref GitHubWFRunNumber
        - Key: GitHubSHA
          Value: !Ref GitHubSHA

  ###################################### Kinesis VPC Endpoint ######################################
  KinesisVpcEndpoint:
    Condition: IsKinesisVpcInterfaceEndpoint
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.${ServiceName}
      VpcId: !Ref VpcId
      VpcEndpointType: "Interface"
      SubnetIds: !Ref SubnetIds
      SecurityGroupIds: !Ref SecurityGroupIds
      PrivateDnsEnabled: "true"
      Tags: 
        - Key: Name
          Value: !Sub "${ProjectName}-${ServiceName}-vpce${CiBuild}"
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: GitHubRepository
          Value: !Ref GitHubRepository
        - Key: GitHubRef
          Value: !Ref GitHubRef
        - Key: GitHubURL
          Value: !Ref GitHubURL
        - Key: GitHubWFRunNumber
          Value: !Ref GitHubWFRunNumber
        - Key: GitHubSHA
          Value: !Ref GitHubSHA

  ###################################### Athena VPC Endpoint #######################################
  AthenaVpcEndpoint:
    Condition: IsAthenaVpcInterfaceEndpoint
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.${ServiceName}
      VpcId: !Ref VpcId
      VpcEndpointType: "Interface"
      SubnetIds: !Ref SubnetIds
      SecurityGroupIds: !Ref SecurityGroupIds
      PrivateDnsEnabled: "true"
      Tags: 
        - Key: Name
          Value: !Sub "${ProjectName}-${ServiceName}-vpce${CiBuild}"
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: GitHubRepository
          Value: !Ref GitHubRepository
        - Key: GitHubRef
          Value: !Ref GitHubRef
        - Key: GitHubURL
          Value: !Ref GitHubURL
        - Key: GitHubWFRunNumber
          Value: !Ref GitHubWFRunNumber
        - Key: GitHubSHA
          Value: !Ref GitHubSHA
          
  ###################################### Param Store VPC Endpoint ##################################
  SSMParamStoreVpcEndpoint:
    Condition: IsSSMParamStoreVpcInterfaceEndpoint
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.${ServiceName}
      VpcId: !Ref VpcId
      VpcEndpointType: "Interface"
      SubnetIds: !Ref SubnetIds
      SecurityGroupIds: !Ref SecurityGroupIds
      PrivateDnsEnabled: "true"
      Tags: 
        - Key: Name
          Value: !Sub "${ProjectName}-${ServiceName}-vpce${CiBuild}"
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: GitHubRepository
          Value: !Ref GitHubRepository
        - Key: GitHubRef
          Value: !Ref GitHubRef
        - Key: GitHubURL
          Value: !Ref GitHubURL
        - Key: GitHubWFRunNumber
          Value: !Ref GitHubWFRunNumber
        - Key: GitHubSHA
          Value: !Ref GitHubSHA

Outputs:
  ###################################### VPC Endpoint ##############################################
  S3GatewayVpceId:
    Condition: IsS3VpcGatewayEndpoint
    Description: "The ID of the S3 VPC Gateway Endpoint."
    Value: !Ref S3VpcGatewayEndpoint
  DynamoDBGatewayVpceId:
    Condition: IsDynamoDBVpcGatewayEndpoint
    Description: "The ID of the DynamoDB VPC Gateway Endpoint."
    Value: !Ref DynamoDBVpcGatewayEndpoint
  KmsInterfaceVpceId:
    Condition: IsKmsVpcInterfaceEndpoint
    Description: "The ID of the KMS VPC Interface Endpoint."
    Value: !Ref KmsInterfaceVpcEndpoint
  RekognitionInterfaceVpceId:
    Condition: IsRekognitionVpcInterfaceEndpoint
    Description: "The ID of the Rekognition VPC Interface Endpoint."
    Value: !Ref RekognitionInterfaceVpcEndpoint
  SecretsInterfaceVpceId:
    Condition: IsSecretsManagerVpcInterfaceEndpoint
    Description: "The ID of the Secrets Manager VPC Interface Endpoint."
    Value: !Ref SecretsVpcInterEndpoint
  SnsInterfaceVpceId:
    Condition: IsSnsVpcInterfaceEndpoint
    Description: "The ID of the SNS VPC Interface Endpoint."
    Value: !Ref SnsInterfaceVpcEndpoint
  SqsInterfaceVpceId:
    Condition: IsSqsVpcInterfaceEndpoint
    Description: "The ID of the SQS VPC Interface Endpoint."
    Value: !Ref SqsInterfaceVpceEndpoint
  CloudWatchInterfaceVpceId:
    Condition: IsCloudWatchVpcEndpoint
    Description: "The ID of the CloudWatch VPC Endpoint."
    Value: !Ref CloudWatchVpcEndpoint
  GlueInterfaceVpceId:
    Condition: IsGlueVpcInterfaceEndpoint
    Description: "The ID of the Glue VPC Interface Endpoint."
    Value: !Ref GlueVpcEndpoint
  KinesisInterfaceVpceId:
    Condition: IsKinesisVpcInterfaceEndpoint
    Description: "The ID of the Kinesis VPC Interface Endpoint."
    Value: !Ref KinesisVpcEndpoint
  AthenaInterfaceVpceId:
    Condition: IsAthenaVpcInterfaceEndpoint
    Description: "The ID of the Athena VPC Endpoint."
    Value: !Ref AthenaVpcEndpoint
  SSMParamStoreInterfaceVpceId:
    Condition: IsSSMParamStoreVpcInterfaceEndpoint
    Description: "The ID of the SSM ParamStore VPC Endpoint."
    Value: !Ref SSMParamStoreVpcEndpoint